// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String          @id @default(uuid())
  username       String          @unique
  email          String?         @unique
  name           String?
  family         String?
  phone          String?         @unique
  password       String?
  telegramID     String?         @unique
  whatsappnumber String?         @unique
  cargoShipments CargoShipment[]
  flights        Flight[]

  @@map(name: "users")
}

model Flight {
  id                         String   @id @default(uuid())
  departureDateTime          DateTime
  arrivalDateTime            DateTime
  acceptableCargoDescription String
  estimatedCost              Float?
  userID                     String
  user                       User     @relation(fields: [userID], references: [id])
  departureAirportId         String   @map("departureAirportId")
  destinationAirportId       String   @map("destinationAirportId")
  departureCity              Airport  @relation("flightDepurtures", fields: [departureAirportId], references: [id])
  destinationCity            Airport  @relation("flightDestinations", fields: [destinationAirportId], references: [id])

  @@map(name: "flights")
}

model CargoShipment {
  id                   String    @id @default(uuid())
  approximateDateTime  DateTime?
  immediateDelivery    Boolean   @default(true)
  cargoDescription     String
  cargoWeight          Float?
  cargoType            String?
  estimatedCost        Float?
  userID               String
  departureAirportId   String    @map("departureAirportId")
  destinationAirportId String    @map("destinationAirportId")
  departureAirport     Airport   @relation("cargoShipmentDepurtures", fields: [departureAirportId], references: [id])
  destinationAirport   Airport   @relation("cargoShipmentDestinations", fields: [destinationAirportId], references: [id])
  User                 User      @relation(fields: [userID], references: [id])

  @@map(name: "CargoShipments")
}

model Country {
  id              String        @id @default(uuid())
  name            String
  iso3            String?       @unique
  iso2            String?       @unique
  numeric_code    String?
  phone_code      String?
  capital         String?
  currency        String?
  currency_name   String?
  currency_symbol String?
  tld             String?
  native          String?
  region          String?
  region_id       String?
  subregion       String?
  subregion_id    String?
  nationality     String?
  timezones       Timezone[]
  translationsId  String?       @unique
  translations    Translations? @relation(fields: [translationsId], references: [id])
  latitude        String?
  longitude       String?
  emoji           String?
  emojiU          String?
  cities          City[]
}

model City {
  id        String  @id @default(uuid())
  name      String
  countryId String
  country   Country @relation(fields: [countryId], references: [id])

  Airport Airport[]
}

model Airport {
  id                        String          @id @default(uuid())
  name                      String
  cityId                    String
  city                      City            @relation(fields: [cityId], references: [id])
  departureFlights          Flight[]        @relation("flightDepurtures")
  destinationFlights        Flight[]        @relation("flightDestinations")
  destinationCargoShipments CargoShipment[] @relation("cargoShipmentDestinations")
  departureCargoShipments   CargoShipment[] @relation("cargoShipmentDepurtures")
}

model Translations {
  id      String   @id @default(uuid())
  kr      String?
  pt_BR   String?
  pt      String?
  nl      String?
  hr      String?
  fa      String?
  de      String?
  es      String?
  fr      String?
  ja      String?
  it      String?
  cn      String?
  tr      String?
  country Country?
}

model Timezone {
  id            String  @id @default(uuid())
  zoneName      String
  gmtOffset     Int
  gmtOffsetName String
  abbreviation  String
  tzName        String
  countryId     String
  country       Country @relation(fields: [countryId], references: [id])
}
